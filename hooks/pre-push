#!/bin/bash
# Verifies certain criteria before pushing.

set -e

missing=()

while read local_ref local_oid remote_ref remote_oid; do
  range="${remote_oid}..${local_oid}"
  while read filename; do
    echo -n "filename: $filename "

    if git diff "${range}" $filename | grep -q '^+// @version'; then
      echo '[good]'
    else
      echo '[missing]'
      missing+=("${filename}")
    fi

  done < <(git diff --name-only "${range}" | grep '\.js$')

  if [ -n "${missing[*]}" ]; then
    echo "Some files are missing version updates: ${missing[*]}"
    exit 1
  fi
done

skip_prepush=$(git config --type bool --get  skip.prepush || echo false)
skip_prepush_scope=$(git config --list --show-scope | awk '/skip.prepush/ {print $1}' | tail -n1)

echo 'warn: Git pushes are currently failing on purpose.'
if [ "${skip_prepush}" = "true" -a "${skip_prepush_scope}" = "command" ]; then
  echo 'info: But the magic code was passed, so ignoring....'
else
  echo 'info: Verify version updates present:'
  echo 'info: BEGIN DIFF'
  git diff origin..HEAD | grep -e '^[+-]// @version' -e '^[+-]  const version =' || true
  echo 'info: END DIFF'
  echo 'info: Use "git -c skip.prepush push" to ignore.'
  exit 1
fi
